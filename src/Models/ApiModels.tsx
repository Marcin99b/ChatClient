/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/Rooms/CreateOffer": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateOfferRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["CreateOfferResponse"];
          };
        };
      };
    };
  };
  "/Rooms/{id}/AddOfferCandidate": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["AddCandidateRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
      };
    };
  };
  "/Rooms/{id}/AddAnswerCandidate": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["AddCandidateRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
      };
    };
  };
  "/Rooms/{id}/AddAnswer": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["AddAnswerRequest"];
        };
      };
      responses: {
        /** @description Success */
        200: never;
      };
    };
  };
  "/Rooms/{id}/GetOffer": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetOfferResponse"];
          };
        };
      };
    };
  };
  "/Rooms/GetRooms": {
    post: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetRoomsResponse"];
          };
        };
      };
    };
  };
  "/Rooms/{id}/Delete": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: never;
      };
    };
  };
  "/WebRtc/GetIceServers": {
    post: {
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["GetIceServersResponse"];
          };
        };
      };
    };
  };
  "/Rooms/GetRoom/{id}": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Success */
        200: {
          content: {
            "application/json": components["schemas"]["Room"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    AddAnswerRequest: {
      answer?: components["schemas"]["SdpData"];
    };
    AddCandidateRequest: {
      candidate?: components["schemas"]["CandidateItem"];
    };
    Candidate: {
      /** Format: uuid */
      id?: string;
      data?: components["schemas"]["CandidateItem"];
    };
    CandidateItem: {
      candidate?: string | null;
      /** Format: int32 */
      sdpMLineIndex?: number;
      sdpMid?: string | null;
      usernameFragment?: string | null;
    };
    CreateOfferRequest: {
      offer?: components["schemas"]["SdpData"];
    };
    CreateOfferResponse: {
      /** Format: uuid */
      roomId?: string;
    };
    GetIceServersResponse: {
      iceServers?: components["schemas"]["Ice_Servers"][] | null;
    };
    GetOfferResponse: {
      offer?: components["schemas"]["SdpData"];
    };
    GetRoomsResponse: {
      ids?: string[] | null;
    };
    Ice_Servers: {
      url?: string | null;
      urls?: string | null;
      username?: string | null;
      credential?: string | null;
    };
    Room: {
      /** Format: uuid */
      id?: string;
      offer?: components["schemas"]["SdpData"];
      offerCandidates?: readonly components["schemas"]["Candidate"][] | null;
      answerCandidates?: readonly components["schemas"]["Candidate"][] | null;
      answer?: components["schemas"]["SdpData"];
    };
    SdpData: {
      sdp?: string | null;
      type?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
